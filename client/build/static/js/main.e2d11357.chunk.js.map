{"version":3,"sources":["components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","multipleFileChangedHandler","event","setState","selectedFiles","target","files","console","log","multipleFileUploadHandler","data","FormData","state","i","length","append","name","axios","post","headers","accept","Accept-Language","Content-Type","concat","_boundary","then","response","locationArray","list","status","error","ocShowAlert","code","catch","message","background","arguments","undefined","alertContainer","document","querySelector","alertEl","createElement","textNode","createTextNode","setAttribute","$","css","appendChild","setTimeout","fadeOut","remove","bind","assertThisInitialized","react_default","a","className","id","style","boxShadow","color","marginLeft","type","multiple","onChange","onClick","map","item","key","Component","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mSAkIeA,cA7Hb,SAAAA,EAAaC,GAAQ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACnBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAOJ,KAaXQ,2BAA6B,SAACC,GAC5BR,EAAKS,SAAS,CACbC,cAAeF,EAAMG,OAAOC,QAE7BC,QAAQC,IAAK,KAAON,EAAMG,OAAOC,QAlBZZ,EAuBvBe,0BAA4B,WAC1B,IAAMC,EAAO,IAAIC,SACfP,EAAgBV,EAAKkB,MAAMR,cAE7B,GAAKA,EAAgB,CACpB,IAAM,IAAIS,EAAI,EAAGA,EAAIT,EAAcU,OAAQD,IAC1CH,EAAKK,OAAQ,eAAgBX,EAAeS,GAAKT,EAAeS,GAAIG,MAExEC,IAAMC,KAAM,oCAAqCR,EAAM,CACnDS,QAAS,CACRC,OAAU,mBACVC,kBAAmB,iBACnBC,eAAA,iCAAAC,OAAiDb,EAAKc,cAGtDC,KAAM,SAAEC,GAIb,GAHKnB,QAAQC,IAAK,WAAakB,EAAShB,KAAKiB,eACxCjC,EAAKS,SAAS,CAAEyB,KAAMF,EAAShB,KAAKiB,gBACpCpB,QAAQC,IAAI,gBAAgBd,EAAKkB,MAAMgB,MACvC,MAAQF,EAASG,OAAS,CAEzB,IAAIH,EAAShB,KAAKoB,MAajB,OAFApC,EAAKqC,YAAa,gBAAiB,WAE5BL,EAAShB,KAZX,oBAAsBgB,EAAShB,KAAKoB,MAAME,KAC9CtC,EAAKqC,YAAa,gBAAiB,OACxB,0BAA4BL,EAAShB,KAAKoB,MAAME,KAC3DtC,EAAKqC,YAAa,wBAAyB,OAG3CrC,EAAKqC,YAAaL,EAAShB,KAAKoB,MAAO,UAWxCG,MAAO,SAAEH,GAEZpC,EAAKqC,YAAaD,EAAO,cAI1BpC,EAAKqC,YAAa,qBAAsB,QApEpBrC,EA2EtBqC,YAAc,SAAEG,GAAqC,IAA5BC,EAA4BC,UAAAtB,OAAA,QAAAuB,IAAAD,UAAA,GAAAA,UAAA,GAAf,UAC7BE,EAAiBC,SAASC,cAAe,uBAC7CC,EAAUF,SAASG,cAAe,OAClCC,EAAWJ,SAASK,eAAgBV,GACpCO,EAAQI,aAAc,QAAS,mBAC/BC,IAAGL,GAAUM,IAAK,aAAcZ,GAChCM,EAAQO,YAAaL,GACrBL,EAAeU,YAAaP,GAC5BQ,WAAY,WACZH,IAAGL,GAAUS,QAAS,QACtBJ,IAAGL,GAAUU,UACV,MApFLzD,EAAKkB,MAAQ,CAEbR,cAAe,KACfwB,KAAO,IAGPlC,EAAKe,0BAA4Bf,EAAKe,0BAA0B2C,KAA/BzD,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAD,KACjCA,EAAKO,2BAA6BP,EAAKO,2BAA2BmD,KAAhCzD,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAD,KATfA,wEA2FrB,OACC4D,EAAAC,EAAAb,cAAA,WACCY,EAAAC,EAAAb,cAAA,OAAKc,UAAU,aAEdF,EAAAC,EAAAb,cAAA,OAAKe,GAAG,uBAGRH,EAAAC,EAAAb,cAAA,OAAKc,UAAU,yBAAyBE,MAAO,CAAEC,UAAW,wCAC3DL,EAAAC,EAAAb,cAAA,OAAKc,UAAU,eACdF,EAAAC,EAAAb,cAAA,MAAIgB,MAAO,CAAEE,MAAO,OAAQC,WAAY,SAAxC,kCACAP,EAAAC,EAAAb,cAAA,KAAGc,UAAU,aAAaE,MAAO,CAAEG,WAAY,SAA/C,gEAEDP,EAAAC,EAAAb,cAAA,OAAKc,UAAU,aACdF,EAAAC,EAAAb,cAAA,KAAGc,UAAU,aAAb,qDACAF,EAAAC,EAAAb,cAAA,SAAOoB,KAAK,OAAOC,UAAQ,EAACC,SAAUnE,KAAKI,6BAC3CqD,EAAAC,EAAAb,cAAA,OAAKc,UAAU,QACdF,EAAAC,EAAAb,cAAA,UAAQc,UAAU,eAAeS,QAASpE,KAAKY,2BAA/C,eAKJ6C,EAAAC,EAAAb,cAAA,OAAKc,UAAU,aACfF,EAAAC,EAAAb,cAAA,OAAKc,UAAU,yBAAyBE,MAAO,CAAEC,UAAW,wCAC1DL,EAAAC,EAAAb,cAAA,UACG7C,KAAKe,MAAMgB,KAAKsC,IAAK,SAACC,EAAKtD,GAAN,OACrByC,EAAAC,EAAAb,cAAA,MAAI0B,IAAKvD,GAAIsD,gBArHHE,aCeJC,mLAZX,OACEhB,EAAAC,EAAAb,cAAA,OAAKc,UAAU,OACdF,EAAAC,EAAAb,cAAC6B,EAAA,EAAD,KACCjB,EAAAC,EAAAb,cAAA,WACCY,EAAAC,EAAAb,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnF,cANxB6E,aCKEO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO5B,EAAAC,EAAAb,cAACyC,EAAD,MAAS5C,SAAS6C,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9D,KAAK,SAAA+D,GACjCA,EAAaC","file":"static/js/main.e2d11357.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\nclass Home extends Component {\r\n  constructor( props ) {\r\n    super( props );\r\n    this.state = {\r\n    \r\n    selectedFiles: null,\r\n    list : []\r\n    }\r\n\r\n    this.multipleFileUploadHandler = this.multipleFileUploadHandler.bind(this);\r\n    this.multipleFileChangedHandler = this.multipleFileChangedHandler.bind(this);\r\n  }\r\n\r\n \r\n\r\nmultipleFileChangedHandler = (event) => {\r\n  this.setState({\r\n   selectedFiles: event.target.files\r\n  });\r\n  console.log( \"xx\" + event.target.files );\r\n };\r\n\r\n \r\n \r\nmultipleFileUploadHandler = () => {\r\n  const data = new FormData();\r\nlet selectedFiles = this.state.selectedFiles;\r\n// If file selected\r\n  if ( selectedFiles ) {\r\n   for ( let i = 0; i < selectedFiles.length; i++ ) {\r\n    data.append( 'galleryImage', selectedFiles[ i ], selectedFiles[ i ].name );\r\n   }\r\naxios.post( '/api/profile/multiple-file-upload', data, {\r\n    headers: {\r\n     'accept': 'application/json',\r\n     'Accept-Language': 'en-US,en;q=0.8',\r\n     'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n    }\r\n   })\r\n    .then( ( response ) => {\r\n     console.log( 'res >>>>',  response.data.locationArray );\r\n     this.setState({ list: response.data.locationArray});\r\n     console.log(\"State list   \"+this.state.list)\r\nif ( 200 === response.status ) {\r\n      // If file size is larger than expected.\r\n      if( response.data.error ) {\r\n       if ( 'LIMIT_FILE_SIZE' === response.data.error.code ) {\r\n        this.ocShowAlert( 'Max size: 4MB', 'red' );\r\n       } else if ( 'LIMIT_UNEXPECTED_FILE' === response.data.error.code ){\r\n        this.ocShowAlert( 'Max 10 images allowed', 'red' );\r\n       } else {\r\n        // If not the given ile type\r\n        this.ocShowAlert( response.data.error, 'red' );\r\n       }\r\n      } else {\r\n       // Success\r\n       this.ocShowAlert( 'File Uploaded', '#3089cf' );\r\n      \r\n       return response.data;    \r\n      //  console.log(\"ssss \"+this.state.selectedFiles.locationArray)\r\n      \r\n}\r\n     }\r\n    }).catch( ( error ) => {\r\n    // If another error\r\n    this.ocShowAlert( error, 'red' );\r\n   });\r\n  } else {\r\n   // if file not selected throw error\r\n   this.ocShowAlert( 'Please upload file', 'red' );\r\n  }\r\n};\r\n \r\n \r\n\r\n// ShowAlert Function\r\n ocShowAlert = ( message, background = '#3089cf' ) => {\r\n      let alertContainer = document.querySelector( '#oc-alert-container' ),\r\n      alertEl = document.createElement( 'div' ),\r\n      textNode = document.createTextNode( message );\r\n      alertEl.setAttribute( 'class', 'oc-alert-pop-up' );\r\n      $( alertEl ).css( 'background', background );\r\n      alertEl.appendChild( textNode );\r\n      alertContainer.appendChild( alertEl );\r\n      setTimeout( function () {\r\n      $( alertEl ).fadeOut( 'slow' );\r\n      $( alertEl ).remove();\r\n      }, 3000 );\r\n };\r\nrender() {\r\n  //const items = this.state.list.map(item => <li>{item}</li> );\r\n\r\n  return(\r\n   <div>\r\n    <div className=\"container\">\r\n     {/* For Alert box*/}\r\n     <div id=\"oc-alert-container\"></div>\r\n \r\n{/* Multiple File Upload */}\r\n     <div className=\"card border-light mb-3\" style={{ boxShadow: '0 5px 10px 2px rgba(195,192,192,.5)' }}>\r\n      <div className=\"card-header\">\r\n       <h3 style={{ color: '#555', marginLeft: '12px' }}>AH DECALS : Image Utility Tool</h3>\r\n       <p className=\"text-muted\" style={{ marginLeft: '12px' }}>Image Size: Max 4MB  | Max Number of Selection : 10 Images </p>\r\n      </div>\r\n      <div className=\"card-body\">\r\n       <p className=\"card-text\">Please upload the Product Images for your listing</p>\r\n       <input type=\"file\" multiple onChange={this.multipleFileChangedHandler}/>\r\n       <div className=\"mt-5\">\r\n        <button className=\"btn btn-info\" onClick={this.multipleFileUploadHandler}>Upload!</button>\r\n       </div>\r\n      </div>\r\n     </div>\r\n</div>\r\n    <div className=\"container\">\r\n    <div className=\"card border-light mb-3\" style={{ boxShadow: '0 5px 10px 2px rgba(195,192,192,.5)' }}>\r\n      <ul>       \r\n        {this.state.list.map( (item,i) => (\r\n         <li key={i}>{item}</li>\r\n      ))}\r\n      </ul>\r\n      </div>\r\n    </div>\r\n   </div>\r\n  );\r\n }\r\n}\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Home from \"./components/Home\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\t      <Router>\r\n\t\t      <div>\r\n\t\t\t      <Route exact path=\"/\" component={Home} />\r\n\t\t      </div>\r\n\t      </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}